// 1. [[Prototype]]
// 자바스크립트의 객체는 명세서에서 명명한 [[Prototype]]이라는 숨김 프로퍼티를 갖습니다.
// 이 숨김 프로퍼티 값은 null이거나 다른 객체에 대한 참조가 되는데, 
// 다른 객체를 참조하는 경우 참조 대상을 '프로토타입(prototype)'이라 부릅니다.
// 아래 예시처럼 특별한 이름인 __proto__을 사용하면 값을 설정할 수 있습니다.

let animal = {
  eats: true
};
let rabbit = {
  jumps: true
};

rabbit.__proto__ = animal;
// __proto__는 [[Prototype]]용 getter·setter입니다.

// 프로토타입 체이닝엔 두 가지 제약사항이 있습니다.
// 순환 참조(circular reference)는 허용되지 않습니다. 
// __proto__를 이용해 닫힌 형태로 다른 객체를 참조하면 에러가 발생합니다.
// __proto__의 값은 객체나 null만 가능합니다. 다른 자료형은 무시됩니다.

// 2. 프로토타입은 읽기 전용이다
// 프로토타입은 프로퍼티를 읽을 때만 사용합니다.
// 프로퍼티를 추가, 수정하거나 지우는 연산은 객체에 직접 해야 합니다.
// 그렇지만 접근자 프로퍼티는 setter 함수를 사용해 프로퍼티에 값을 할당하므로 접근자 프로퍼티에 값을 할당하면
// 객체는 프로퍼티에 추가되는 것이 아닌 setter 함수가 호출되면서 위 예시와는 조금 다르게 동작합니다.

// 3. this가 나타내는 것
// this는 프로토타입에 영향을 받지 않습니다.
// 메우 중요!
// 메서드를 객체에서 호출했든 프로토타입에서 호출했든 상관없이 this는 언제나 . 앞에 있는 객체입니다.

// 4. for…in 반복문
// for..in은 상속 프로퍼티도 순회대상에 포함시킵니다.